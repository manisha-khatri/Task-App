[versions]
activity = "1.8.0"
activityCompose = "1.8.2"
agp = "8.8.1"
apollo = "4.0.0"
appcompat = "1.6.1"
compose = "1.6.1" # Compose BOM
composeCompiler = "1.5.11"
constraintlayout = "2.1.4"
core-testing = "2.2.0"
coreKtx = "1.10.1"
coroutines-test = "1.7.3"
datastore = "1.0.0"
espresso-contrib = "3.5.1"
espresso-core = "3.5.1"
espresso-intents = "3.5.1"
gson = "2.9.0"
hilt = "2.51.1"
hilt-androidx = "1.2.0"
junit = "4.13.2"
junitKtx = "1.2.1"
kotlin = "1.9.23"
kotlinx-coroutines = "1.7.3"
ksp = "1.9.23-1.0.20"
lifecycle = "2.6.2"
material = "1.10.0"
material3 = "1.2.1"
mockito = "5.2.0"
mockito-kotlin = "5.2.0"
mockk = "1.13.7"
nav-compose = "2.7.7"
navigationFragment = "2.9.0"
retrofit = "2.9.0"
room = "2.6.1"
viewmodel = "2.6.2"
workmanager = "2.10.2"
androidx-test = "1.5.0"
androidx-test-core = "1.5.0"
androidx-test-ext-junit = "1.1.5"
androidx-test-rules = "1.5.0"
ui-automator = "2.2.0"
jetbrainsKotlinJvm = "1.9.23"
hamcrest = "2.2"
mockito-inline = "5.2.0"
turbine = "1.1.0"
okhttp = "4.12.0" # or latest

[libraries]
# Activity & Appcompat
androidx-activity = { group = "androidx.activity", name = "activity", version.ref = "activity" }
activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activityCompose" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }

# Apollo
apollo-runtime = { group = "com.apollographql.apollo", name = "apollo-runtime", version.ref = "apollo" }

# Compose
compose-material = { module = "androidx.compose.material:material", version.ref = "material" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "material3" }
compose-material-icons-extended = { group = "androidx.compose.material", name = "material-icons-extended", version.ref = "compose" }
compose-navigation = { group = "androidx.navigation", name = "navigation-compose", version.ref = "nav-compose" }
compose-runtime-livedata = { module = "androidx.compose.runtime:runtime-livedata", version.ref = "compose" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4", version.ref = "compose" }
compose-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest", version.ref = "compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }

# Constraint Layout
androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "constraintlayout" }

# Core
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }

# Coroutines
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines-test" }

# DataStore
datastore-preferences = { group = "androidx.datastore", name = "datastore-preferences", version.ref = "datastore" }

# Hilt
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "hilt" }
androidx-hilt-navigation-compose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "hilt-androidx" }
androidx-hilt-compiler = { module = "androidx.hilt:hilt-compiler", version.ref = "hilt-androidx" }

# JUnit
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-junit-ktx = { group = "androidx.test.ext", name = "junit-ktx", version.ref = "junitKtx" }

# Lifecycle & ViewModel
coroutine-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "viewmodel" }
lifecycle-runtime-compose = { group = "androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "lifecycle" }

# Material
material = { group = "com.google.android.material", name = "material", version.ref = "material" }

# Mocks
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockito-kotlin" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
mockito-inline = { module = "org.mockito:mockito-inline", version.ref = "mockito-inline" }

# Navigation
androidx-navigation-fragment = { group = "androidx.navigation", name = "navigation-fragment", version.ref = "navigationFragment" }

# Retrofit & Gson
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "gson" }
okhttp-logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }

# Room
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }

# Testing
core-testing = { module = "androidx.arch.core:core-testing", version.ref = "core-testing" }
androidx-test-core = { group = "androidx.test", name = "core", version.ref = "androidx-test-core" }
androidx-test-ext-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidx-test-ext-junit" }
androidx-test-rules = { group = "androidx.test", name = "rules", version.ref = "androidx-test-rules" }
espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espresso-core" }
espresso-contrib = { group = "androidx.test.espresso", name = "espresso-contrib", version.ref = "espresso-contrib" }
espresso-intents = { group = "androidx.test.espresso", name = "espresso-intents", version.ref = "espresso-intents" }
ui-automator = { group = "androidx.test.uiautomator", name = "uiautomator", version.ref = "ui-automator" }
hamcrest = { group = "org.hamcrest", name = "hamcrest", version.ref = "hamcrest" }

# WorkManager
work-runtime = { module = "androidx.work:work-runtime", version.ref = "workmanager" }
androidx-work-runtime-ktx = { module = "androidx.work:work-runtime-ktx", version.ref = "workmanager" }

#Flow Testing Lib
turbine = { group = "app.cash.turbine", name = "turbine", version.ref = "turbine" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
apollo = { id = "com.apollographql.apollo", version.ref = "apollo" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
jetbrains-kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "jetbrainsKotlinJvm" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize" }
